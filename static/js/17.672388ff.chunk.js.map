{"version":3,"sources":["exp/Exp14.js","utils/canvas.js"],"names":["ref","useRef","useEffect","requestId","canvas","current","ctx","getContext","ratio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","getPixelRatio","width","getComputedStyle","getPropertyValue","slice","height","style","i","animation","clearRect","beginPath","arc","Math","abs","cos","PI","fillStyle","fill","font","fillText","requestAnimationFrame","cancelAnimationFrame","display","justifyContent","alignItems","border","foo"],"mappings":"gKAKe,qBACb,IAAIA,EAAMC,mBAqDV,OAnDAC,qBAAU,WACR,IAgBIC,EAhBAC,EAASJ,EAAIK,QACbC,EAAMF,EAAOG,WAAW,MAExBC,ECRqB,SAAAC,GAC3B,IAAIC,EACFD,EAAQE,wBACRF,EAAQG,8BACRH,EAAQI,2BACRJ,EAAQK,0BACRL,EAAQM,yBACRN,EAAQE,wBACR,EAEF,OAAQK,OAAOC,kBAAoB,GAAKP,EDF1BQ,CAAcZ,GACtBa,EAAQC,iBAAiBhB,GAC1BiB,iBAAiB,SACjBC,MAAM,GAAI,GACTC,EAASH,iBAAiBhB,GAC3BiB,iBAAiB,UACjBC,MAAM,GAAI,GAEblB,EAAOe,MAAQA,EAAQX,EACvBJ,EAAOmB,OAASA,EAASf,EACzBJ,EAAOoB,MAAML,MAAb,UAAwBA,EAAxB,MACAf,EAAOoB,MAAMD,OAAb,UAAyBA,EAAzB,MAGA,IAAIE,EAAI,EA4BR,OA1BkB,SAAZC,IACJpB,EAAIqB,UAAU,EAAG,EAAGvB,EAAOe,MAAOf,EAAOmB,QACzCjB,EAAIsB,YACJtB,EAAIuB,IACFzB,EAAOe,MAAQ,EACff,EAAOmB,OAAS,EACfnB,EAAOe,MAAQ,EAAKW,KAAKC,IAAID,KAAKE,IAAIP,IACvC,EACA,EAAIK,KAAKG,IAGX3B,EAAI4B,UAAY,MAChB5B,EAAI6B,OAEJ7B,EAAI8B,KAAO,aACX9B,EAAI4B,UAAY,QAChB5B,EAAI+B,SAAS,aAAclB,EAAQ,EAAGI,EAAS,GAC/CjB,EAAI+B,SAAS,aAAclB,EAAQ,EAAGI,EAAS,EAAI,IACnDjB,EAAI+B,SAAS,aAAclB,EAAQ,EAAGI,EAAS,EAAI,IAEnDE,GAAK,IACLtB,EAAYmC,sBAAsBZ,GAGpCA,GAEO,WACLa,qBAAqBpC,OAKvB,yBAAKqB,MAAO,CAAEL,MAAO,OAAQI,OAAQ,QAASiB,QAAS,OAAQC,eAAgB,SAAUC,WAAY,WACnG,4BACE1C,IAAKA,EACLwB,MAAO,CAAEmB,OAAQ,iBAAkBxB,MAAO,OAAQI,OAAQ,SAC1DqB,IAAI","file":"static/js/17.672388ff.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { getPixelRatio } from \"../utils/canvas\";\n\nexport default () => {\n  let ref = useRef();\n\n  useEffect(() => {\n    let canvas = ref.current;\n    let ctx = canvas.getContext('2d');\n\n    let ratio = getPixelRatio(ctx);\n    let width = getComputedStyle(canvas)\n      .getPropertyValue('width')\n      .slice(0, -2);\n    let height = getComputedStyle(canvas)\n      .getPropertyValue('height')\n      .slice(0, -2);\n\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    let requestId;\n    let i = 0;\n\n    const animation = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      ctx.arc(\n        canvas.width / 2,\n        canvas.height / 2,\n        (canvas.width / 2) * Math.abs(Math.cos(i)),\n        0,\n        2 * Math.PI\n      );\n\n      ctx.fillStyle = 'red';\n      ctx.fill();\n\n      ctx.font = \"30px Inter\";\n      ctx.fillStyle = 'white';\n      ctx.fillText(\"Canvas txt\", width / 2, height / 2);\n      ctx.fillText(\"pixelRatio\", width / 2, height / 2 + 40);\n      ctx.fillText(\"pixelRatio\", width / 2, height / 2 + 80);\n\n      i += 0.01;\n      requestId = requestAnimationFrame(animation);\n    };\n\n    animation();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n\n  return (\n    <div style={{ width: \"100%\", height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n      <canvas\n        ref={ref}\n        style={{ border: \"1px solid gold\", width: '100%', height: '100vh' }}\n        foo=\"bar\"\n      />\n    </div>\n  );\n};\n","// http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\n// https://developpaper.com/on-the-solution-of-canvas-drawing-fuzzy-problem/\n\nexport const getPixelRatio = context => {\n  var backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  return (window.devicePixelRatio || 1) / backingStore;\n};"],"sourceRoot":""}