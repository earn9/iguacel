{"version":3,"sources":["exp/Exp14.js","utils/canvas.js"],"names":["ref","useRef","useEffect","requestId","canvas","current","ctx","getContext","ratio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","getPixelRatio","canvasWidth","getComputedStyle","getPropertyValue","slice","canvasHeight","style","width","height","i","animation","clearRect","beginPath","arc","Math","abs","cos","PI","fillStyle","fill","font","fillText","requestAnimationFrame","cancelAnimationFrame","display","justifyContent","alignItems","border","foo"],"mappings":"gKAKe,qBACb,IAAIA,EAAMC,mBAmDV,OAjDAC,qBAAU,WACR,IAcIC,EAdAC,EAASJ,EAAIK,QACbC,EAAMF,EAAOG,WAAW,MAExBC,ECRqB,SAAAC,GAC3B,IAAIC,EACFD,EAAQE,wBACRF,EAAQG,8BACRH,EAAQI,2BACRJ,EAAQK,0BACRL,EAAQM,yBACRN,EAAQE,wBACR,EAEF,OAAQK,OAAOC,kBAAoB,GAAKP,EDF1BQ,CAAcZ,GACtBa,EAAcC,iBAAiBhB,GAChCiB,iBAAiB,SACjBC,MAAM,GAAI,GAAKd,EACde,EAAeH,iBAAiBhB,GACjCiB,iBAAiB,UACjBC,MAAM,GAAI,GAAKd,EAElBJ,EAAOoB,MAAMC,MAAb,UAAwBN,EAAxB,MACAf,EAAOoB,MAAME,OAAb,UAAyBH,EAAzB,MAGA,IAAII,EAAI,EA4BR,OA1BkB,SAAZC,IACJtB,EAAIuB,UAAU,EAAG,EAAGzB,EAAOqB,MAAOrB,EAAOsB,QACzCpB,EAAIwB,YACJxB,EAAIyB,IACF3B,EAAOqB,MAAQ,EACfrB,EAAOsB,OAAS,EACftB,EAAOqB,MAAQ,EAAKO,KAAKC,IAAID,KAAKE,IAAIP,IACvC,EACA,EAAIK,KAAKG,IAGX7B,EAAI8B,UAAY,MAChB9B,EAAI+B,OAEJ/B,EAAIgC,KAAO,aACXhC,EAAI8B,UAAY,QAChB9B,EAAIiC,SAAS,aAAcnC,EAAOqB,MAAQ,EAAGrB,EAAOsB,OAAS,GAC7DpB,EAAIiC,SAAS,aAAcnC,EAAOqB,MAAQ,EAAGrB,EAAOsB,OAAS,EAAI,IACjEpB,EAAIiC,SAAS,aAAcnC,EAAOqB,MAAQ,EAAGrB,EAAOsB,OAAS,EAAI,IAEjEC,GAAK,IACLxB,EAAYqC,sBAAsBZ,GAGpCA,GAEO,WACLa,qBAAqBtC,OAKvB,yBAAKqB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASgB,QAAS,OAAQC,eAAgB,SAAUC,WAAY,WACnG,4BACE5C,IAAKA,EACLwB,MAAO,CAAEqB,OAAQ,iBAAkBpB,MAAO,OAAQC,OAAQ,SAC1DoB,IAAI","file":"static/js/17.aba96e5f.chunk.js","sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { getPixelRatio } from \"../utils/canvas\";\n\nexport default () => {\n  let ref = useRef();\n\n  useEffect(() => {\n    let canvas = ref.current;\n    let ctx = canvas.getContext('2d');\n\n    let ratio = getPixelRatio(ctx);\n    let canvasWidth = getComputedStyle(canvas)\n      .getPropertyValue('width')\n      .slice(0, -2) * ratio;\n    let canvasHeight = getComputedStyle(canvas)\n      .getPropertyValue('height')\n      .slice(0, -2) * ratio;\n\n    canvas.style.width = `${canvasWidth}px`;\n    canvas.style.height = `${canvasHeight}px`;\n\n    let requestId;\n    let i = 0;\n\n    const animation = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      ctx.arc(\n        canvas.width / 2,\n        canvas.height / 2,\n        (canvas.width / 2) * Math.abs(Math.cos(i)),\n        0,\n        2 * Math.PI\n      );\n\n      ctx.fillStyle = 'red';\n      ctx.fill();\n\n      ctx.font = \"30px Inter\";\n      ctx.fillStyle = 'white';\n      ctx.fillText(\"Canvas txt\", canvas.width / 2, canvas.height / 2);\n      ctx.fillText(\"pixelRatio\", canvas.width / 2, canvas.height / 2 + 40);\n      ctx.fillText(\"pixelRatio\", canvas.width / 2, canvas.height / 2 + 80);\n\n      i += 0.01;\n      requestId = requestAnimationFrame(animation);\n    };\n\n    animation();\n\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n\n  return (\n    <div style={{ width: \"100%\", height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n      <canvas\n        ref={ref}\n        style={{ border: \"1px solid gold\", width: '100%', height: '100vh' }}\n        foo=\"bar\"\n      />\n    </div>\n  );\n};\n","// http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n\n// https://developpaper.com/on-the-solution-of-canvas-drawing-fuzzy-problem/\n\nexport const getPixelRatio = context => {\n  var backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n\n  return (window.devicePixelRatio || 1) / backingStore;\n};"],"sourceRoot":""}